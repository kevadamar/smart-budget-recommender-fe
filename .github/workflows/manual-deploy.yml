name: Manual Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging
      skip_tests:
        description: 'Skip linting'
        required: false
        type: boolean
        default: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        if: ${{ !inputs.skip_tests }}
        run: npm run lint

      - name: Build for ${{ inputs.environment }}
        run: |
          if [ "${{ inputs.environment }}" == "production" ]; then
            npm run build
          else
            npm run build:dev
          fi
        env:
          NODE_ENV: ${{ inputs.environment }}

      - name: Create deployment package
        run: |
          tar -czf dist.tar.gz dist/
          echo "Environment: ${{ inputs.environment }}" > deploy-info.txt
          echo "Deployed at: $(date)" >> deploy-info.txt
          echo "Commit: ${{ github.sha }}" >> deploy-info.txt

      - name: Deploy to Server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_PORT || 22 }}
          source: "dist.tar.gz,deploy-info.txt"
          target: ${{ secrets.SERVER_DEPLOY_PATH }}/temp

      - name: Extract and deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SERVER_PORT || 22 }}
          script: |
            cd ${{ secrets.SERVER_DEPLOY_PATH }}

            # Backup
            if [ -d "dist" ]; then
              mv dist dist.backup.$(date +%Y%m%d_%H%M%S)
              ls -dt dist.backup.* | tail -n +4 | xargs rm -rf
            fi

            # Deploy
            tar -xzf temp/dist.tar.gz
            cp temp/deploy-info.txt dist/
            rm -rf temp

            echo "✅ Deployment to ${{ inputs.environment }} completed!"

      - name: Deployment summary
        run: |
          echo "### Deployment Summary :rocket:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: ${{ inputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Actor**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ✅ Success" >> $GITHUB_STEP_SUMMARY
